LTokenType.ID ('if_fn')
LTokenType.LPAREN ('(')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.LCURLY ('{')
WHITE_SPACE ('\n  ')
LTokenType.IF ('if')
WHITE_SPACE (' ')
LTokenType.LPAREN ('(')
LTokenType.ID ('iff')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.ID ('x')
WHITE_SPACE (' ')
LTokenType.ASSIGN_EQ ('=')
WHITE_SPACE (' ')
LTokenType.ID ('then')
WHITE_SPACE (' ')
LTokenType.ELSE ('else')
WHITE_SPACE (' ')
LTokenType.ID ('x')
WHITE_SPACE (' ')
LTokenType.ASSIGN_EQ ('=')
WHITE_SPACE (' ')
LTokenType.ID ('fi')
LTokenType.SEMICOLON (';')
WHITE_SPACE ('\n\n  ')
LTokenType.IF ('if')
WHITE_SPACE (' ')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.IF ('if')
WHITE_SPACE (' ')
LTokenType.LPAREN ('(')
LTokenType.ID ('y')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.IF ('if')
WHITE_SPACE (' ')
LTokenType.LPAREN ('(')
LTokenType.ID ('z')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.SKIP ('skip')
WHITE_SPACE (' ')
LTokenType.ELSE ('else')
WHITE_SPACE (' ')
LTokenType.SKIP ('skip')
WHITE_SPACE (' ')
LTokenType.ELSE ('else')
WHITE_SPACE (' ')
LTokenType.SKIP ('skip')
WHITE_SPACE ('\n')
LTokenType.RCURLY ('}')
WHITE_SPACE ('\n\n')
LTokenType.ID ('while_fn')
LTokenType.LPAREN ('(')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.LCURLY ('{')
WHITE_SPACE ('\n  ')
LTokenType.WHILE ('while')
WHITE_SPACE (' ')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.WHILE ('while')
WHITE_SPACE (' ')
LTokenType.LPAREN ('(')
LTokenType.ID ('y')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.WHILE ('while')
WHITE_SPACE (' ')
LTokenType.LPAREN ('(')
LTokenType.ID ('z')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.SKIP ('skip')
WHITE_SPACE ('\n')
LTokenType.RCURLY ('}')
WHITE_SPACE ('\n\n')
LTokenType.ID ('compound_fn')
LTokenType.LPAREN ('(')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.LCURLY ('{')
WHITE_SPACE ('\n   ')
LTokenType.LCURLY ('{')
LTokenType.RCURLY ('}')
LTokenType.SEMICOLON (';')
WHITE_SPACE (' ')
LTokenType.LCURLY ('{')
LTokenType.RCURLY ('}')
LTokenType.SEMICOLON (';')
WHITE_SPACE (' ')
LTokenType.LCURLY ('{')
LTokenType.LCURLY ('{')
LTokenType.LCURLY ('{')
LTokenType.LCURLY ('{')
LTokenType.LCURLY ('{')
LTokenType.RCURLY ('}')
LTokenType.RCURLY ('}')
LTokenType.RCURLY ('}')
LTokenType.RCURLY ('}')
LTokenType.RCURLY ('}')
WHITE_SPACE ('\n')
LTokenType.RCURLY ('}')
WHITE_SPACE ('\n\n')
LTokenType.MAIN ('main')
LTokenType.LPAREN ('(')
LTokenType.RPAREN (')')
WHITE_SPACE (' ')
LTokenType.LCURLY ('{')
WHITE_SPACE ('\n  ')
LTokenType.ID ('x')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.LPAREN ('(')
LTokenType.ID ('x')
LTokenType.LPAREN ('(')
LTokenType.RPAREN (')')
LTokenType.RPAREN (')')
LTokenType.RPAREN (')')
LTokenType.RPAREN (')')
LTokenType.RPAREN (')')
LTokenType.RPAREN (')')
LTokenType.RPAREN (')')
LTokenType.RPAREN (')')
LTokenType.RPAREN (')')
LTokenType.SEMICOLON (';')
WHITE_SPACE ('\n  ')
LTokenType.ID ('x')
WHITE_SPACE (' ')
LTokenType.ASSIGN_EQ ('=')
WHITE_SPACE (' ')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.MINUS ('-')
LTokenType.ID ('x')
LTokenType.SEMICOLON (';')
WHITE_SPACE ('\n  ')
LTokenType.ID ('x')
WHITE_SPACE (' ')
LTokenType.ASSIGN_EQ ('=')
WHITE_SPACE (' ')
LTokenType.DECIMAL ('1')
WHITE_SPACE (' ')
LTokenType.PLUS ('+')
WHITE_SPACE (' ')
LTokenType.COMMENT ('# comment')
WHITE_SPACE ('\n  ')
LTokenType.ID ('x')
WHITE_SPACE ('\n')
LTokenType.RCURLY ('}')
