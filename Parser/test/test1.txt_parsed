(start (functionSpecifier f ( ) { }) (functionSpecifier g ( ) { (funcInnerStatement (skipStatement skip)) }) (functionSpecifier h ( ) { (funcInnerStatement (skipStatement skip)) ; (funcInnerStatement (skipStatement skip)) ; (funcInnerStatement (skipStatement skip)) }) (functionSpecifier x ( x ) { }) (functionSpecifier y ( x , y ) { }) (functionSpecifier z ( x , y , z ) { }) (functionSpecifier ll ( ) { }) (functionSpecifier ll_1 ( ll ) { (funcInnerStatement (functionInvokation ll ( ))) }) (entryPoint main ( ) { }) (functionSpecifier func_while ( a ) { (funcInnerStatement (functionInvokation ll ( ))) ; (funcInnerStatement (skipStatement skip)) ; (funcInnerStatement (assignment a = (expression (arithmeticExpression (powerExpression (baseExpression 2.4555)))))) ; (funcInnerStatement (whileStatement while ( (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression a)))) > (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression 0)))))) ) (statement (funcInnerStatement (bracesBlockStatement { (statement (funcInnerStatement (assignment a = (expression (arithmeticExpression (addExpression (addExpression (multDivExpression (powerExpression (baseExpression a)))) - (multDivExpression (powerExpression (baseExpression 1)))))))) ; (funcInnerStatement (assignment b = (expression (arithmeticExpression (multDivExpression (multDivExpression (powerExpression (baseExpression a))) * (powerExpression (baseExpression 2) ^ (powerExpression (baseExpression 4))))))))) }))))) }) (functionSpecifier func_if ( a ) { (funcInnerStatement (assignment a = (expression (arithmeticExpression (powerExpression (baseExpression 0b1101)))))) ; (funcInnerStatement (ifStatement if ( (relationExpression ! (relationExpression (compoundRelationExpr (logicalOrExpression (logicalAndExpression (logicalAndExpression (baseExpression a)) && (baseExpression b)))))) ) (statement (funcInnerStatement (assignment c = (expression (arithmeticExpression (powerExpression (baseExpression 2))))))) else (statement (funcInnerStatement (assignment a = (expression (arithmeticExpression (powerExpression (baseExpression 2))))))) (statement (funcInnerStatement (ifStatement if ( (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression a))))) ) (statement (funcInnerStatement (assignment a = (expression (arithmeticExpression (powerExpression (baseExpression 2)))))) ; (funcInnerStatement (assignment b = (expression (arithmeticExpression (powerExpression (baseExpression "String")))))))))))) }) <EOF>)