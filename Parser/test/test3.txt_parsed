(start (functionSpecifier if_fn ( ) { (funcInnerStatement (ifStatement if ( (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression iff))))) ) (statement (funcInnerStatement (assignment x = (expression (arithmeticExpression (powerExpression (baseExpression then))))))) else (statement (funcInnerStatement (assignment x = (expression (arithmeticExpression (powerExpression (baseExpression fi)))))) ; (funcInnerStatement (functionInvokation f ( (functionArgs main) ))) ; (funcInnerStatement (ifStatement if ( (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression x))))) ) (statement (funcInnerStatement (ifStatement if ( (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression y))))) ) (statement (funcInnerStatement (ifStatement if ( (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression z))))) ) (statement (funcInnerStatement (skipStatement skip))) else (statement (funcInnerStatement (skipStatement skip)))))) else (statement (funcInnerStatement (skipStatement skip))))))))))) }) (functionSpecifier while_fn ( ) { (funcInnerStatement (whileStatement while ( (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression x))))) ) (statement (funcInnerStatement (whileStatement while ( (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression y))))) ) (statement (funcInnerStatement (whileStatement while ( (relationExpression (compoundRelationExpr (arithmeticExpression (powerExpression (baseExpression z))))) ) (statement (funcInnerStatement (skipStatement skip))))))))))) }) (functionSpecifier compound_fn ( ) { (funcInnerStatement (bracesBlockStatement { })) ; (funcInnerStatement (bracesBlockStatement { })) ; (funcInnerStatement (bracesBlockStatement { (statement (funcInnerStatement (bracesBlockStatement { (statement (funcInnerStatement (bracesBlockStatement { (statement (funcInnerStatement (bracesBlockStatement { (statement (funcInnerStatement (bracesBlockStatement { }))) }))) }))) }))) })) }) (entryPoint main ( ) { (funcInnerStatement (functionInvokation x ( (functionArgs (arithmeticExpression (powerExpression (baseExpression x)))) (functionArgs (arithmeticExpression (powerExpression (baseExpression ( (expression (arithmeticExpression (powerExpression (baseExpression x)))) (expression (arithmeticExpression (powerExpression (baseExpression ( (expression (arithmeticExpression (powerExpression (baseExpression x)))) (expression (arithmeticExpression (powerExpression (baseExpression ( (expression (arithmeticExpression (powerExpression (baseExpression x)))) (expression (arithmeticExpression (powerExpression (baseExpression ( (expression (arithmeticExpression (powerExpression (baseExpression x)))) (expression (arithmeticExpression (powerExpression (baseExpression ( (expression (arithmeticExpression (powerExpression (baseExpression x)))) (expression (arithmeticExpression (powerExpression (baseExpression ( (expression (arithmeticExpression (powerExpression (baseExpression x)))) (expression (arithmeticExpression (powerExpression (baseExpression ( (expression (arithmeticExpression (powerExpression (baseExpression x)))) (expression (arithmeticExpression (powerExpression (baseExpression ( ))))) ))))) ))))) ))))) ))))) ))))) ))))) ))))) ))) ; (funcInnerStatement (skipStatement skip)) ; (funcInnerStatement (assignment x = (expression (arithmeticExpression (powerExpression (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression (unaryExpression - (baseExpression x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ; (funcInnerStatement (assignment x = (expression (arithmeticExpression (addExpression (addExpression (multDivExpression (powerExpression (baseExpression 1)))) + (multDivExpression (powerExpression (baseExpression x)))))))) }) <EOF>)